<page url="/huelights">
  <style>
    .lamp { 
      display: inline-block; 
      width: 20px;
      height: 20px;
      margin: 10px;
      border-radius: 10px;
      -webkit-transition: all .3s ease-out;
    }
  </style>
  <body>
    <p>
      <button onclick="doKitt()">Kitt effect</button>
      <button onclick="doRainbow()">Rainbow effect</button>
      <button onclick="doNothing()">Stop</button>
    </p>
  </body>
  <script src="/huelights.js"></script>
</page>

<page url="/huelights.js" type="js">
  var lamps = [22,18,21,15,26,19,23,20,16,17,13,12,10,11,4,7,1,3,9,2,5,6,8,14,24,25,27,28,29];
  var state = {};
  var color = {};
  var elts = {};
  var size = lamps.length;

  for (var i = 0; i < size; i++)
  {
    elts[i] = document.body.appendChild(document.createElement("div"));
    elts[i].className = "lamp";
  }
  
  function sin(f)
  {
    return 8 * (Math.sin(f) + 1);
  }

  function set(l,r,g,b)
  {
    var rgb = toHex(r) + toHex(g) + toHex(b);
  
    if (state[l] && color[l] == rgb)
      return;
    state[l] = true;
    color[l] = rgb;
    elts[l].style.opacity = 1;
    elts[l].style.backgroundColor = "#" + rgb;
    console.log(rgb)
  
    call("lamps/setcolor?lamps=" + lamps[l] + "&color=" + rgb);
  }
  
  function toHex(f)
  {
    return (~~f).toString(16) + (~~f).toString(16);
  }
  
  function setOnOff(l, b)
  {
    if (state[l] == b)
      return;
    state[l] = b;
    elts[l].style.opacity = 1*b;
    
    var onoff = b ? "on" : "off";
    call("lamps/set" + onoff + "?lamps=" + lamps[l]);
  }
  
  function setAllOnOff(b)
  {
    var onoff = b ? "on" : "off";
    call("lamps/set" + onoff);
    for (var i = 0; i < size; i++)
    {
      state[i] = b;
      elts[i].style.opacity = 1*b;
    }
  }
  
  function strobe(l)
  {
    call("effects/strobe?lamps=" + lamps[l]);
  }
  
  var calls = [];
  function call(f)
  {
    calls.push(f);
  }
  
  setInterval(function()
  {
    var f = calls.shift();
    if (!f)
      return;
    var x = new XMLHttpRequest()
    var rnd = (f.indexOf("?") > -1 ? "&" : "?") + "rnd=" + Math.random()
    x.open("GET", "http://huelandsspoor.nl/api/" + f + rnd);
    x.send();
  }, 50);
  
  function doRainbow()
  {
    doEffect(function(t) {
      var i = Math.floor(t * 3);
      var l = i % size;
      var phase = Math.floor(i / size) % 3;
      switch (phase)
      {
        case 0:
        case 1:
          set(l, sin(i/3), sin(i/3 + 2), sin(i/3 + 4));
          break;
        case 2:
          setOnOff(l, false);
          break;
      }
    });
  }
  
  function doKitt()
  {
    var from = 14;
    var count = size - 14;
    doEffect(function(t) {
      var m = from + count * (1 + Math.sin(t)) / 2;
      for (var l = from; l < from + count; l++)
        if (Math.abs(m - l) < 1.7)
          set(l, 15, 0, 0);
        else
          setOnOff(l, false);
    })
  }
  
  function doNothing()
  {
    doEffect(function(){});
  }
  
  var toh;
  function doEffect(f)
  {
    clearInterval(toh);
    setAllOnOff(false);
    var t0 = new Date();
    toh = setInterval(function() {
      f((new Date() - t0) / 1000);
    }, 30);
  }
</page>